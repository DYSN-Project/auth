version: '3.7'services:  dysn-auth:    container_name: dysn-auth    build:      context: ../../.      dockerfile: ./.deploy/local/Dockerfile    env_file:      - .env    networks:      - dysn    depends_on:      - kafka    ports:      - "5301:5301"    volumes:      - dysn-auth:/var/www/html/dysn/auth  dysn-auth-db:    image: postgres:latest    container_name: dysn-auth-db    environment:      - POSTGRES_USER=${DB_USER}      - POSTGRES_PASSWORD=${DB_PASSWORD}      - POSTGRES_DB=${DB_NAME}      - DATABASE_HOST=${DB_HOST}    ports:      - ${POSTGRES_PORT:-5433}:5432    volumes:      - dysn-auth-db:/var/lib/postgresql/data    networks:      - dysn  zookeeper:      image: confluentinc/cp-zookeeper:latest      environment:        ZOOKEEPER_CLIENT_PORT: 2181        ZOOKEEPER_TICK_TIME: 2000      ports:        - 22181:2181      networks:        - dysn  kafka:    image: confluentinc/cp-kafka:5.0.0    container_name: kafka    ports:      - "9092:9092"      - "9094:9094"    environment:      KAFKA_BROKER_ID: 1      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:9094      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"      KAFKA_NUM_PARTITIONS: 4    networks:      - dysn  kafka-ui:      image: provectuslabs/kafka-ui      container_name: kafka-ui      ports:        - 8090:8080      restart: always      environment:        - KAFKA_CLUSTERS_0_NAME=local        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9094        - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181      links:        - kafka        - zookeeper      networks:        - dysnvolumes:  dysn-auth:  dysn-auth-db:networks:  dysn:    name: docker_dysn